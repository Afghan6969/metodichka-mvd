"use client"

import { useState } from "react"
import { Card } from "@/components/ui/card"
import { Collapsible, CollapsibleContent, CollapsibleTrigger } from "@/components/ui/collapsible"
import { ChevronDown, ChevronRight, Target } from "lucide-react"
import { CopyButton } from "@/components/copy-button"
import { SearchBar } from "@/components/search-bar"

export function TrainingPage() {
  const [openTrainings, setOpenTrainings] = useState<{ [key: string]: boolean }>({})
  const [searchQuery, setSearchQuery] = useState("")

  const toggleTraining = (trainingId: string) => {
    setOpenTrainings((prev) => ({
      ...prev,
      [trainingId]: !prev[trainingId],
    }))
  }

  const trainings = [
    {
      id: "pushups",
      title: '–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ "–û—Ç–∂–∏–º–∞–Ω–∏—è"',
      icon: "üí™",
      content: [
        'say –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ "–û—Ç–∂–∏–º–∞–Ω–∏—è" 30 —Ä–∞–∑! –ü—Ä–∏—Å—Ç—É–ø–∏–ª–∏ –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é!',
        'say –ù–∞ —ç—Ç–æ–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ "–û—Ç–∂–∏–º–∞–Ω–∏—è" –∑–∞–∫–æ–Ω—á–µ–Ω–∞.',
      ],
    },
    {
      id: "plank",
      title: '–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ "–ü–ª–∞–Ω–∫–∞"',
      icon: "üèãÔ∏è",
      content: ['say –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ "–ü–ª–∞–Ω–∫–∞" 2 –º–∏–Ω—É—Ç—ã! –ù–∞—á–∏–Ω–∞–µ–º!', 'say –ù–∞ —ç—Ç–æ–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ "–ü–ª–∞–Ω–∫–∞" –∑–∞–∫–æ–Ω—á–µ–Ω–∞.'],
    },
    {
      id: "squats",
      title: '–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ "–ü—Ä–∏—Å–µ–¥–∞–Ω–∏—è"',
      icon: "ü¶µ",
      content: ['say –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ "–ü—Ä–∏—Å–µ–¥–∞–Ω–∏—è" 30 —Ä–∞–∑! –ü—Ä–∏—Å—Ç—É–ø–∞–µ–º!', 'say –ù–∞ —ç—Ç–æ–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ "–ü—Ä–∏—Å–µ–¥–∞–Ω–∏—è" –∑–∞–∫–æ–Ω—á–µ–Ω–∞.'],
    },
    {
      id: "running",
      title: '–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ "–ë–µ–≥"',
      icon: "üèÉ",
      content: ['say –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ "–ë–µ–≥" 4 –∫—Ä—É–≥–∞! –í–ø–µ—Ä—ë–¥!', 'say –ù–∞ —ç—Ç–æ–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ "–ë–µ–≥" –∑–∞–∫–æ–Ω—á–µ–Ω–∞.'],
    },
    {
      id: "obstacles",
      title: '–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ "–ü—Ä—ã–∂–∫–∏ —á–µ—Ä–µ–∑ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è"',
      icon: "üèÉ‚Äç‚ôÇÔ∏è",
      content: [
        'say –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ "–ü—Ä—ã–∂–∫–∏ —á–µ—Ä–µ–∑ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è " 10 —Ä–∞–∑! –í —Ä–∞–±–æ—Ç—É!',
        'say –ù–∞ —ç—Ç–æ–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ "–ü—Ä—ã–∂–∫–∏ —á–µ—Ä–µ–∑ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è " –∑–∞–∫–æ–Ω—á–µ–Ω–∞.',
      ],
      note: "–ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—Ç—Å—è –∑–∞–±–æ—Ä—ã –∏ –≤—Å—è—á–µ—Å–∫–∏–µ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è.",
    },
    {
      id: "parachute",
      title: '–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ "–ü—Ä—ã–∂–∫–∏ —Å –ø–∞—Ä–∞—à—é—Ç–æ–º"',
      icon: "ü™Ç",
      content: [
        'say –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ "–ü—Ä—ã–∂–∫–∏ —Å –ø–∞—Ä–∞—à—é—Ç–æ–º" 1 —Ä–∞–∑! –ü—Ä–∏—Å—Ç—É–ø–∞–µ–º!',
        'say –ù–∞ —ç—Ç–æ–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ "–ü—Ä—ã–∂–∫–∏ —Å –ø–∞—Ä–∞—à—é—Ç–æ–º" –∑–∞–∫–æ–Ω—á–µ–Ω–∞.',
      ],
      note: "–ø–µ—Ä–µ–¥ –ø—Ä—ã–∂–∫–æ–º –∫—É–ø–∏—Ç—å –ø–∞—Ä–∞—à—é—Ç –≤ –≥–æ—Ä–æ–¥–µ –ú–∏—Ä–Ω—ã–π –∏ —Å–æ–≤–µ—Ä—à–∏—Ç—å –ø—Ä—ã–∂–æ–∫ –≤ –ø–æ–ª–µ.",
    },
    {
      id: "punching",
      title: '–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ "–£–¥–∞—Ä—ã –ø–æ –≥—Ä—É—à–µ"',
      icon: "ü•ä",
      content: [
        'say –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ "–£–¥–∞—Ä—ã –ø–æ –≥—Ä—É—à–µ" 2 –º–∏–Ω—É—Ç—ã! –ù–∞—á–∏–Ω–∞–µ–º!',
        'say –ù–∞ —ç—Ç–æ–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ "–£–¥–∞—Ä—ã –ø–æ –≥—Ä—É—à–µ" –∑–∞–∫–æ–Ω—á–µ–Ω–∞.',
      ],
      note: "–≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤ —Å–ø–æ—Ä—Ç–∑–∞–ª–µ –≥. –ú–∏—Ä–Ω—ã–π.",
    },
    {
      id: "noparachute",
      title: '–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ "–ü—Ä—ã–∂–∫–∏ –±–µ–∑ –ø–∞—Ä–∞—à—é—Ç–∞"',
      icon: "üåä",
      content: [
        'say –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ "–ü—Ä—ã–∂–∫–∏ –±–µ–∑ –ø–∞—Ä–∞—à—é—Ç–∞" 1 —Ä–∞–∑! –í–ø–µ—Ä—ë–¥!',
        'say –ù–∞ —ç—Ç–æ–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ "–ü—Ä—ã–∂–∫–∏ –±–µ–∑ –ø–∞—Ä–∞—à—é—Ç–∞ " –∑–∞–∫–æ–Ω—á–µ–Ω–∞.',
      ],
      note: "–∑–∞–ø—Ä–µ—â–µ–Ω–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å –≤–æ –≤—Ä–µ–º—è –∑–∏–º—ã. –ü—Ä—ã–∂–∫–∏ —Å–æ–≤–µ—Ä—à–∞—é—Ç—Å—è –ø–æ –∞–Ω–∞–ª–æ–≥–∏–∏ —Å –ø—Ä—ã–∂–∫–∞–º–∏ —Å –ø–∞—Ä–∞—à—é—Ç–æ–º, –Ω–æ –≤ –≤–æ–¥—É.",
    },
    {
      id: "shooting",
      title: '–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ "–°—Ç—Ä–µ–ª—å–±–∞ –≤ —Ç–∏—Ä–µ"',
      icon: "üéØ",
      content: [
        'say –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ "–°—Ç—Ä–µ–ª—å–±–∞ –≤ —Ç–∏—Ä–µ" 2 —Ä–∞–∑–∞! –ü—Ä–∏—Å—Ç—É–ø–∞–µ–º!',
        'say –ù–∞ —ç—Ç–æ–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ "–°—Ç—Ä–µ–ª—å–±–∞ –≤ —Ç–∏—Ä–µ " –∑–∞–∫–æ–Ω—á–µ–Ω–∞.',
      ],
      note: "—Å—Ç—Ä–µ–ª—å–±–∞ –ø–æ –±—É—Ç—ã–ª–∫–∞–º –≤ —Ç–∏—Ä–µ –≤ –≥–æ—Ä–æ–¥–µ –ù–µ–≤—Å–∫–æ–º.",
    },
    {
      id: "runobstacles",
      title: '–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ "–ë–µ–≥ —á–µ—Ä–µ–∑ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è"',
      icon: "üèÉ‚Äç‚ôÄÔ∏è",
      content: [
        'say –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ "–ë–µ–≥ —á–µ—Ä–µ–∑ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è" 2 —Ä–∞–∑–∞! –í —Ä–∞–±–æ—Ç—É!',
        'say –ù–∞ —ç—Ç–æ–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ "–ë–µ–≥ —á–µ—Ä–µ–∑ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è" –∑–∞–∫–æ–Ω—á–µ–Ω–∞.',
      ],
      note: "–≤—ã—Å—Ç–∞–≤–∏—Ç—å –∑–∞–±–æ—Ä—ã/–±–∞—Ä—å–µ—Ä—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–π –ø–æ –ø—Ä—è–º–æ–π –≤ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–π –∑–æ–Ω–µ.",
    },
    {
      id: "swimming",
      title: '–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ "–ó–∞–ø–ª—ã–≤"',
      icon: "üèä",
      content: ['say –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ "–ó–∞–ø–ª—ã–≤" 2 —Ä–∞–∑–∞! –ù–∞—á–∏–Ω–∞–µ–º!', 'say –ù–∞ —ç—Ç–æ–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ "–ó–∞–ø–ª—ã–≤" –∑–∞–∫–æ–Ω—á–µ–Ω–∞.'],
      note: "–≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤ –±–∞—Å—Å–µ–π–Ω–µ –≤ –≥–æ—Ä–æ–¥–µ –ü—Ä–∏–≤–æ–ª–∂—Å–∫.",
    },
    {
      id: "maneuvers",
      title: '–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ "–°–ø–µ—Ü. –ú–∞–Ω—ë–≤—Ä—ã"',
      icon: "üöó",
      content: [
        'say –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ "–°–ø–µ—Ü. –ú–∞–Ω—ë–≤—Ä—ã" 2 –º–∏–Ω—É—Ç—ã! –í–ø–µ—Ä—ë–¥!',
        'say –ù–∞ —ç—Ç–æ–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ "–°–ø–µ—Ü. –ú–∞–Ω—ë–≤—Ä—ã" –∑–∞–∫–æ–Ω—á–µ–Ω–∞.',
      ],
      note: "–≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞ —Ç—Ä–µ–∫–µ –ª–∏–±–æ –Ω–∞ —Ç–µ—Å—Ç-–¥—Ä–∞–π–≤–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –≤ –≥–æ—Ä–æ–¥–µ –ü—Ä–∏–≤–æ–ª–∂—Å–∫.",
    },
  ]

  const filteredTrainings = trainings.filter(
    (training) =>
      training.title.toLowerCase().includes(searchQuery.toLowerCase()) ||
      training.content.some((line) => line.toLowerCase().includes(searchQuery.toLowerCase())) ||
      (training.note && training.note.toLowerCase().includes(searchQuery.toLowerCase())),
  )

  return (
    <div className="flex-1 p-8 bg-gray-50">
      <div className="max-w-4xl mx-auto">
        {/* –ò–∑–º–µ–Ω–∏–ª —Ü–≤–µ—Ç–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –Ω–∞ –æ—Ä–∞–Ω–∂–µ–≤—ã–µ */}
        <div className="flex items-center gap-3 mb-6">
          <Target className="h-8 w-8 text-orange-600" />
          <h1 className="text-3xl font-bold text-orange-700">–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏</h1>
        </div>

        <div className="mb-6">
          <SearchBar onSearch={setSearchQuery} placeholder="–ü–æ–∏—Å–∫ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫..." />
        </div>

        {/* –ò–∑–º–µ–Ω–∏–ª —Ü–≤–µ—Ç–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –±–ª–æ–∫–∞ –Ω–∞ –æ—Ä–∞–Ω–∂–µ–≤—ã–µ */}
        <div className="mb-6 p-4 bg-orange-50 border border-orange-200 rounded-lg">
          <p className="text-orange-800 font-medium">–ü—Ä–∏–º–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è –Ω–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–µ –∫–∞–∂–¥–æ–π –∏–∑ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ - 1 –º–∏–Ω—É—Ç–∞.</p>
        </div>

        <div className="space-y-4">
          {filteredTrainings.map((training) => (
            <Card key={training.id} className="bg-white border border-gray-200 shadow-sm">
              <Collapsible open={openTrainings[training.id]} onOpenChange={() => toggleTraining(training.id)}>
                <CollapsibleTrigger className="w-full p-6 text-left hover:bg-gray-50 transition-colors">
                  <div className="flex items-center justify-between">
                    <div className="flex items-center gap-3">
                      {/* –ò–∑–º–µ–Ω–∏–ª —Ü–≤–µ—Ç –∏–∫–æ–Ω–∫–∏ –Ω–∞ –æ—Ä–∞–Ω–∂–µ–≤—ã–π */}
                      <span className="text-orange-600 text-lg">{training.icon}</span>
                      <h2 className="text-xl font-semibold text-orange-700">{training.title}</h2>
                    </div>
                    {openTrainings[training.id] ? (
                      <ChevronDown className="h-5 w-5 text-gray-500" />
                    ) : (
                      <ChevronRight className="h-5 w-5 text-gray-500" />
                    )}
                  </div>
                </CollapsibleTrigger>
                <CollapsibleContent>
                  <div className="px-6 pb-6">
                    <div className="bg-gray-50 p-4 rounded-lg border">
                      {training.content.map((line, index) => (
                        <div key={index} className="flex items-start gap-2 mb-2 last:mb-0">
                          <div className="flex-1 font-mono text-sm text-gray-700">{line}</div>
                          {line.trim().startsWith("say ") && (
                            <CopyButton text={line.trim()} className="flex-shrink-0 mt-0.5" />
                          )}
                        </div>
                      ))}
                    </div>
                    {training.note && (
                      <div className="mt-3 p-3 bg-yellow-50 border border-yellow-200 rounded-lg">
                        <p className="text-yellow-800 text-sm">
                          <strong>–£—Ç–æ—á–Ω–µ–Ω–∏–µ:</strong> {training.note}
                        </p>
                      </div>
                    )}
                  </div>
                </CollapsibleContent>
              </Collapsible>
            </Card>
          ))}
        </div>

        {filteredTrainings.length === 0 && searchQuery && (
          <div className="text-center py-12">
            <p className="text-gray-500">–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –ø–æ –∑–∞–ø—Ä–æ—Å—É "{searchQuery}"</p>
          </div>
        )}

        {/* –ò–∑–º–µ–Ω–∏–ª —Ü–≤–µ—Ç–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –±–ª–æ–∫–∞ –Ω–∞ –∑–µ–ª–µ–Ω—ã–µ */}
        <Card className="p-6 mb-6 mt-6 bg-emerald-50 border border-emerald-200 shadow-sm">
          <div className="flex items-start gap-3">
            <span className="text-emerald-600 text-lg">‚úÖ</span>
            <div className="w-full">
              <div className="flex items-start gap-2">
                <div className="flex-1 font-mono text-sm text-gray-700 bg-gray-50 p-4 rounded-lg border">
                  say –ù–∞ —ç—Ç–æ–º –Ω–∞—à–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –ø–æ–¥–æ—à–ª–∏ –∫ –∫–æ–Ω—Ü—É!
                </div>
                <CopyButton text="say –ù–∞ —ç—Ç–æ–º –Ω–∞—à–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –ø–æ–¥–æ—à–ª–∏ –∫ –∫–æ–Ω—Ü—É!" className="flex-shrink-0 mt-4" />
              </div>
            </div>
          </div>
        </Card>
      </div>
    </div>
  )
}
